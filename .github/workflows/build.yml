name: Build solution

on:
  push:
    branches: [ master, azure-pipelines-integration ]
  pull_request:
    branches: [ master ]

env:
  AZURE_WEBAPP_PACKAGE_PATH: './published'      # set this to the path to your web app project, defaults to the repository root

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Publish DbUp
      if: ${{ github.event_name != 'pull_request' }}
      run: dotnet publish src/DbUp/DbUp.csproj --configuration Release --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/dbup
    - name: Publish Web
      if: ${{ github.event_name != 'pull_request' }}
      run: dotnet publish src/Web/Web.csproj --configuration Release --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/web
    - name: Upload DbUp Build Artifact
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: dbup
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/dbup
    - name: Upload Web Build Artifact
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: web
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/web
    - name: Create deployment
      if: ${{ github.event_name != 'pull_request' }}
      shell: pwsh
      run: |
        $body = @{ ref = "${{ github.ref }}" }
        If ("${{ github.ref }}" -ne "master") { $body.required_contexts = @() }
        Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/deployments" `
        -ContentType "application/vnd.github.v3+json" -Authentication Bearer -Token (ConvertTo-SecureString "${{ secrets.TOKEN_DEPLOYMENT }}" -AsPlainText -Force) `
        -Method POST -Body ($body | ConvertTo-Json)
